const express = require('express')
const phonesList = require("./data-service")
const app = express()
const port = 8000;
const cors = require('cors');
const bodyParser = require('body-parser');
const { v4: uuidv4 } = require('uuid');

app.use(cors());
app.use(bodyParser.json());

app.listen(port, () => {
  console.log(`Server phones-catalog app listening at http://localhost:${port}`)
})

//GET
app.get('/phones', (req, res) => {
  res
  .status(200)
  .json(phonesList)
})

//GET BY ID
app.get('/phones/:id', (req, res) => {
  phoneId = req.params.id;
  const requestPhone = phonesList.find(phone => phone.id ===  phoneId);

  if(!requestPhone) {
    res.status(404).json({"message-error": `Phone with id ${phoneId} not found`});
    return
  }

  setTimeout(() => {
    res.status(200).json(requestPhone)
  }, 3000);
})


//POST
app.post('/phones', (req, res) => {

  let newPhone = req.body;
  const errors = validatePhone(newPhone);

  if(errors.length > 0) {
    res
    .status(400)
    .json({"message-error": errors});
  }
  else {
    phonesList.push({id: uuidv4(),...newPhone });
    res
    .status(201).send();
  }
});

function validatePhone(newPhone) {
  const errors = [];
  const mandatoryFields = [
   "name", "manufacturer", "price", "imageFileName", "screen", "resolution", "ram", "memory", "cam"];

    for (let field of mandatoryFields) {
      let propertyToFillValue = newPhone[field];
      if(!propertyToFillValue) {
        errors.push(`${field} property is required. Please check and fill this property`)
      }
    };

    if(newPhone["id"] != null) {
      errors.push(`Id is autogenerated. Please remove it before send the request in order to not repeat id`);
    }

  return errors;
}

//DELETE
app.delete('/phones/:id', (req, res) => {
  phoneId = req.params.id;
  const phoneToUpdate = phonesList.find(phone => phone.id === phoneId);

  if(!phoneToUpdate) {
    res.status(404).json({"message-error": `Phone with id ${phoneId} not found`})
    return
  }

  const indexInPhoneArray = phonesList.indexOf(phoneToUpdate);
  phonesList.splice(indexInPhoneArray, 1);
  res.status(200).json({"message-success": "Deleted phone"})
})